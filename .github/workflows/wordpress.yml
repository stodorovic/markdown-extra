# This is a basic workflow to help you get started with Actions

name: WordPress Tests

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: PHPUnit tests
    strategy:
      matrix:
        php: [ 5.6, 7.2, 7.4 ]
        include:
          - php: '5.6'
            phpunit: '5.*'
            wordpress: '4.9.16'
          - php: '7.2'
            phpunit: '7.*'
            wordpress: '5.2.9'
          - php: '7.4'
            phpunit: '7.*'
            wordpress: '5.6'
#          - php: '8.0'
#            phpunit: '7.*'
#            wordpress: '5.6'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      -   name: Cache dependencies
          uses: actions/cache@v1
          with:
              path: ~/.composer/cache/files
              key: dependencies-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}
      
      # @link https://github.com/spatie/laravel-activitylog/blob/master/.github/workflows/run-tests.yml
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
            php-version: ${{ matrix.php }}
            extensions: dom, curl, libxml, mbstring, zip, pcntl, mysql, mysqli, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
            coverage: none

      - name: Start MySQL
        run: sudo /etc/init.d/mysql start

      - name: Install dependencies
        run: |
          composer self-update
          composer require "phpunit/phpunit:${{ matrix.phpunit }}" --no-interaction --no-update
          composer update --prefer-dist --no-interaction --no-suggest

#      - name: Install PHPCS with WordPress Coding Standards
#        run: |
#          composer global require dealerdirect/phpcodesniffer-composer-installer:0.5.0 wp-coding-standards/wpcs:2.1.1
    
#      - name: Run PHPCS Coding Standards
#        run: |
#          #/home/runner/.composer/
#          vendor/bin/phpcs $GITHUB_WORKSPACE

      - name: Setup tests
        run: |
            bash tests/unit/bin/install.sh wordpress_test root root localhost ${{ matrix.wordpress }}

      -   name: Execute tests
          run: |
            php vendor/bin/phpunit -c tests/unit/phpunit.xml
          env:
            DB_PORT: ${{ job.services.mysql.ports[3306] }}

  phpcs:
    runs-on:  ubuntu-latest
    name: PHPCS
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: mbstring, intl #optional, setup extensions
          ini-values: memory_limit=256M #optional, setup php.ini configuration
          coverage: xdebug #optional, setup coverage driver

      - name: Check PHP Version
        run: php -v

      - name: Cache composer packages
        uses: actions/cache@v2
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}

      - name: Install PHPCS with WordPress Coding Standards
        run: |
          composer require dealerdirect/phpcodesniffer-composer-installer wp-coding-standards/wpcs phpcompatibility/php-compatibility

      - name: Run PHPCS Coding Standards
        run: |
          vendor/bin/phpcs -v --standard=WordPress --ignore="Michelf/*,vendor/*" $GITHUB_WORKSPACE
          vendor/bin/phpcs -v --standard=PHPCompatibility --runtime-set testVersion 5.4- --ignore="vendor/*" -p $GITHUB_WORKSPACE
